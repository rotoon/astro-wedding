---
import '../styles/global.css'

interface Props {
  title?: string
  description?: string
  image?: string
  canonicalURL?: string
  dynamicOgImage?: boolean
}

const {
  title = 'SOM & TOON Wedding Invitation | May 25, 2025',
  description = 'Join us for the wedding celebration of Suchanya (Som) & Nuttapon (Toon) on May 25, 2025, at Virgin Ville Sanpatong, Chiangmai, Thailand. SOM & TOON START TOGETHER 25-05-2025',
  image = '/img/og-cover.webp',
  canonicalURL = Astro.url.href,
  dynamicOgImage = false,
} = Astro.props

// Wedding details for structured data
const weddingDate = '2025-05-25T08:39:00+07:00'
const weddingLocation =
  'Wedding Venues at Virgin Ville Sanpatong Chiangmai, 194/5 หมู่6 ตำบล ยุหว่า อำเภอสันป่าตอง เชียงใหม่ 50120 ไทย'
const coupleNames = 'Suchanya & Nuttapon'

// Determine the OpenGraph image URL - use dynamic endpoint if specified
const ogImageUrl = dynamicOgImage
  ? new URL('/opengraph.jpg', Astro.url.origin).href
  : new URL(image, Astro.url.origin).href
---

<!doctype html>
<html lang='th'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='viewport'
      content='width=device-width, initial-scale=1.0'
    />
    <link
      rel='icon'
      type='image/svg+xml'
      href='/favicon.ico'
    />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta
      name='title'
      content={title}
    />
    <meta
      name='description'
      content={description}
    />
    <meta
      name='keywords'
      content='wedding, wedding invitation, สุชัญญา, ณัฐพนธ์, wedding chiangmai, virgin ville, sanpatong'
    />
    <meta
      name='author'
      content={coupleNames}
    />
    <link
      rel='canonical'
      href={canonicalURL}
    />

    <!-- Open Graph / Facebook -->
    <meta
      property='og:type'
      content='website'
    />
    <meta
      property='og:url'
      content={canonicalURL}
    />
    <meta
      property='og:title'
      content={title}
    />
    <meta
      property='og:description'
      content={description}
    />
    <meta
      property='og:image'
      content={ogImageUrl}
    />
    <meta
      property='og:locale'
      content='th_TH'
    />
    <meta
      property='og:site_name'
      content='SOM&TOON START TOGETHER'
    />
    <meta
      property='og:image:width'
      content='1200'
    />
    <meta
      property='og:image:height'
      content='630'
    />
    <meta
      property='og:image:alt'
      content='SOM & TOON START TOGETHER 25-05-2025'
    />
    <meta
      property='og:updated_time'
      content={new Date().toISOString()}
    />
    <meta
      property='article:published_time'
      content={new Date().toISOString()}
    />

    <!-- LINE Specific -->
    <meta
      property='line:image'
      content={ogImageUrl}
    />
    <meta
      property='line:title'
      content={title}
    />
    <meta
      property='line:description'
      content={description}
    />

    <!-- Twitter -->
    <meta
      name='twitter:card'
      content='summary_large_image'
    />
    <meta
      name='twitter:url'
      content={canonicalURL}
    />
    <meta
      name='twitter:title'
      content={title}
    />
    <meta
      name='twitter:description'
      content={description}
    />
    <meta
      name='twitter:image'
      content={ogImageUrl}
    />
    <meta
      name='twitter:image:alt'
      content='SOM & TOON START TOGETHER 25-05-2025'
    />
    <meta
      name='twitter:creator'
      content='@weddingthailand'
    />
    <meta
      name='twitter:site'
      content='@weddingthailand'
    />

    <!-- Mobile optimization -->
    <meta
      name='theme-color'
      content='#7b5c43'
    />
    <meta
      name='mobile-web-app-capable'
      content='yes'
    />
    <meta
      name='apple-mobile-web-app-capable'
      content='yes'
    />
    <meta
      name='apple-mobile-web-app-status-bar-style'
      content='default'
    />
    <meta
      name='format-detection'
      content='telephone=no'
    />

    <!-- PWA manifest -->
    <link
      rel='manifest'
      href='/manifest.json'
    />

    <!-- Event Structured Data for SEO -->
    <script type='application/ld+json'>
      {
        "@context": "https://schema.org",
        "@type": "Event",
        "name": "Wedding of Suchanya & Nuttapon",
        "startDate": "${weddingDate}",
        "endDate": "2025-05-25T15:00:00+07:00",
        "location": {
          "@type": "Place",
          "name": "Wedding Venues at Virgin Ville Sanpatong Chiangmai",
          "address": {
            "@type": "PostalAddress",
            "streetAddress": "194/5 หมู่6 ตำบล ยุหว่า",
            "addressLocality": "อำเภอสันป่าตอง",
            "addressRegion": "เชียงใหม่",
            "postalCode": "50120",
            "addressCountry": "TH"
          }
        },
        "image": [
          "${ogImageUrl}",
          "${new URL('/img/hero.webp', Astro.url.origin).href}",
          "${new URL('/img/bride.webp', Astro.url.origin).href}"
        ],
        "description": "SOM & TOON START TOGETHER 25-05-2025",
        "organizer": {
          "@type": "Person",
          "name": "Suchanya & Nuttapon"
        }
      }
    </script>

    <!-- Resource hints for better performance -->
    <link
      rel='preconnect'
      href='https://fonts.googleapis.com'
    />
    <link
      rel='preconnect'
      href='https://fonts.gstatic.com'
      crossorigin
    />
    <link
      rel='preconnect'
      href='https://cdnjs.cloudflare.com'
    />
    <link
      rel='preconnect'
      href='https://unpkg.com'
    />

    <!-- Critical CSS for faster rendering -->
    <style is:inline>
      /* Critical styles to avoid layout shifts */
      body {
        margin: 0;
        padding: 0;
        overflow-x: hidden;
        font-family: 'Montserrat', sans-serif;
      }
      body.loaded {
        overflow-y: auto;
      }
      .loading-screen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #f6f1ed;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        opacity: 1;
        visibility: visible;
        transition:
          opacity 0.8s cubic-bezier(0.65, 0, 0.35, 1),
          visibility 0.8s cubic-bezier(0.65, 0, 0.35, 1);
        will-change: opacity, visibility;
      }
      .loading-screen.hidden {
        opacity: 0;
        visibility: hidden;
      }
      .main-container {
        opacity: 0;
        transition: opacity 0.8s cubic-bezier(0.33, 1, 0.68, 1);
        will-change: opacity;
      }
      .main-container.visible {
        opacity: 1;
      }
    </style>

    <!-- Optimized font loading - display=swap ensures text remains visible during font loading -->
    <link
      href='https://fonts.googleapis.com/css2?family=Bodoni+Moda:wght@400;500;600&family=Cinzel:wght@400;500&family=Montserrat:wght@300;400;500&family=Playfair+Display:wght@400;500&display=swap'
      rel='stylesheet'
      media='print'
      onload="this.media='all'"
    />
    <!-- Font fallback in case the above doesn't load -->
    <noscript>
      <link
        href='https://fonts.googleapis.com/css2?family=Bodoni+Moda:wght@400;500;600&family=Cinzel:wght@400;500&family=Montserrat:wght@300;400;500&family=Playfair+Display:wght@400;500&display=swap'
        rel='stylesheet'
      />
    </noscript>

    <!-- Optimized CSS loading -->
    <link
      rel='stylesheet'
      href='https://unpkg.com/swiper/swiper-bundle.min.css'
      media='print'
      onload="this.media='all'"
    />

    <!-- Load utility functions inline to ensure they're available -->
    <script is:inline>
      // Utility functions for performance optimization

      // Get element utility function - DOM element selection
      window.getElement = function (selector) {
        if (typeof selector === 'string') {
          return document.querySelector(selector)
        }
        return selector
      }

      // Get elements - returns an array for multiple elements
      window.getElements = function (selector) {
        return Array.from(document.querySelectorAll(selector))
      }

      // Optimized throttle function for performance
      window.throttle = function (func, limit) {
        let inThrottle
        return function () {
          const args = arguments
          const context = this
          if (!inThrottle) {
            func.apply(context, args)
            inThrottle = true
            setTimeout(() => (inThrottle = false), limit)
          }
        }
      }

      // Setup animation observer for reveal effects
      document.addEventListener('DOMContentLoaded', function () {
        // Setup animation reveal elements
        setTimeout(setupAnimationObserver, 2000)
      })

      function setupAnimationObserver() {
        if (!('IntersectionObserver' in window)) return

        const observerOptions = {
          threshold: 0.15,
          rootMargin: '0px 0px -50px 0px',
        }

        const handleIntersection = (entries, observer) => {
          entries.forEach((entry) => {
            if (!entry.isIntersecting) return

            // Use requestAnimationFrame for smoother animations
            requestAnimationFrame(() => {
              // Add a small staggered delay based on entry index for better visual flow
              const delay = entry.target.dataset.animationDelay || 0
              setTimeout(() => {
                entry.target.classList.add('visible')
              }, delay)
            })

            observer.unobserve(entry.target)
          })
        }

        const observer = new IntersectionObserver(
          handleIntersection,
          observerOptions
        )

        // Apply staggered animation delays to create better flow
        const elements = document.querySelectorAll(
          '.reveal-title, .reveal-text, .reveal-item'
        )

        // Group elements by sections for staggered effects
        const sections = {}
        elements.forEach((el) => {
          const section = el.closest('section') || 'default'
          if (!sections[section]) {
            sections[section] = []
          }
          sections[section].push(el)
        })

        // Apply staggered delays per section
        Object.values(sections).forEach((sectionElements) => {
          sectionElements.forEach((el, i) => {
            el.dataset.animationDelay = i * 80 // 80ms between elements
            observer.observe(el)
          })
        })
      }
    </script>

    <!-- Wedding Background Music Autoplay Workaround -->
    <script is:inline>
      // เพิ่มฟังก์ชันที่จะพยายามเล่นเพลงทันทีที่มีการโต้ตอบแรกกับเว็บไซต์
      document.addEventListener('DOMContentLoaded', function () {
        // สร้าง Audio element โดยตรงในระดับสูง
        const bgmGlobal = new Audio('/bgm/bgm.MP3')
        bgmGlobal.id = 'bgm-global'
        bgmGlobal.loop = true
        bgmGlobal.volume = 0.6

        // เพิ่มลงใน DOM เพื่อให้สามารถควบคุมได้จากที่อื่น
        bgmGlobal.style.display = 'none'
        document.body.appendChild(bgmGlobal)

        // เก็บสถานะว่าเพลงเริ่มเล่นแล้วหรือยัง
        window.bgmStarted = false

        // ฟังก์ชันที่จะเริ่มเล่นเพลง
        const playBGM = function () {
          if (window.bgmStarted) return

          try {
            bgmGlobal
              .play()
              .then(() => {
                window.bgmStarted = true
                console.log('BGM started successfully')

                // เมื่อเพลงเริ่มเล่นแล้ว ลบ event listener ทั้งหมดออก
                document.removeEventListener('click', playBGM)
                document.removeEventListener('touchstart', playBGM)
                document.removeEventListener('keydown', playBGM)
                document.removeEventListener('scroll', playBGM)
              })
              .catch((err) => {
                // หากไม่สามารถเล่นเพลงได้ ปล่อยให้ event listener ยังทำงานต่อไป
                console.log('Cannot play BGM yet, waiting for more interaction')
              })
          } catch (e) {
            // กรณีเกิด error ก็ปล่อยให้ event listener ยังทำงานต่อไป
          }
        }

        // เพิ่ม event listener สำหรับทุกการโต้ตอบกับเว็บไซต์
        document.addEventListener('click', playBGM)
        document.addEventListener('touchstart', playBGM)
        document.addEventListener('keydown', playBGM)
        document.addEventListener('scroll', playBGM)

        // เปิดให้ component อื่นๆ เข้าถึงตัวเล่นเพลงได้
        window.getBGM = function () {
          return bgmGlobal
        }

        // ฟังก์ชันสำหรับเปิด/ปิดเพลง
        window.toggleBGM = function (mute) {
          if (typeof mute === 'boolean') {
            bgmGlobal.muted = mute
          } else {
            bgmGlobal.muted = !bgmGlobal.muted
          }

          // ถ้ายังไม่เริ่มเล่น และต้องการเปิดเพลง ให้ลองเล่น
          if (!window.bgmStarted && !bgmGlobal.muted) {
            playBGM()
          }

          return !bgmGlobal.muted // return ค่าปัจจุบัน (true = เปิดเสียง, false = ปิดเสียง)
        }
      })
    </script>

    <!-- Consolidated GSAP scripts -->
    <script
      is:inline
      defer
      src='https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js'
    ></script>
    <script
      is:inline
      defer
      src='https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js'
    ></script>
    <!-- Swiper.js for sliders -->
    <script
      is:inline
      defer
      src='https://unpkg.com/swiper/swiper-bundle.min.js'
    ></script>
  </head>
  <body>
    <div class='noise-overlay'></div>
    <slot />
  </body>
</html>
