<!-- Background Music -->
<audio
  id='bgm'
  loop
  muted
  preload='auto'
>
  <source
    src='/bgm/bgm.MP3'
    type='audio/mpeg'
  />
</audio>
<div class='audio-control'>
  <button
    id='audio-toggle'
    class='audio-btn muted'
  >
    <svg
      class='audio-on'
      viewBox='0 0 24 24'
      fill='none'
      stroke='currentColor'
      stroke-width='2'
      stroke-linecap='round'
      stroke-linejoin='round'
    >
      <polygon points='11 5 6 9 2 9 2 15 6 15 11 19 11 5'></polygon>
      <path d='M15.54 8.46a5 5 0 0 1 0 7.07'></path>
      <path d='M19.07 4.93a10 10 0 0 1 0 14.14'></path>
    </svg>
    <svg
      class='audio-off'
      viewBox='0 0 24 24'
      fill='none'
      stroke='currentColor'
      stroke-width='2'
      stroke-linecap='round'
      stroke-linejoin='round'
    >
      <polygon points='11 5 6 9 2 9 2 15 6 15 11 19 11 5'></polygon>
      <line
        x1='23'
        y1='9'
        x2='17'
        y2='15'
      ></line>
      <line
        x1='17'
        y1='9'
        x2='23'
        y2='15'
      ></line>
    </svg>
  </button>
</div>

<script is:inline>
  // จัดการกับปุ่มควบคุมเสียงในส่วน MusicPlayer component
  document.addEventListener('DOMContentLoaded', function () {
    const audioToggle = document.getElementById('audio-toggle')

    if (!audioToggle) return

    // รอให้ window.toggleBGM และ window.getBGM ถูกกำหนดค่าจาก Layout
    const checkForGlobalBGM = function () {
      if (
        typeof window.toggleBGM === 'function' &&
        typeof window.getBGM === 'function'
      ) {
        initToggleButton()
      } else {
        // ลองอีกครั้งหลังจากนี้ 100ms
        setTimeout(checkForGlobalBGM, 100)
      }
    }

    // เริ่มต้นตรวจสอบ
    checkForGlobalBGM()

    // ฟังก์ชันเริ่มต้นปุ่มควบคุม
    function initToggleButton() {
      // ดึง BGM element และตรวจสอบสถานะเริ่มต้น
      const bgmGlobal = window.getBGM()

      // ตรวจสอบและตั้งค่าสถานะเริ่มต้นของปุ่ม
      updateButtonState(bgmGlobal.muted)

      // ฟังก์ชันอัพเดตสถานะปุ่ม
      function updateButtonState(muted) {
        if (muted) {
          audioToggle.classList.add('muted')
        } else {
          audioToggle.classList.remove('muted')
        }
      }

      // ตั้งค่าการคลิกปุ่ม
      audioToggle.addEventListener('click', function () {
        // เรียกใช้ toggleBGM จาก global scope และรับค่าสถานะปัจจุบัน
        const isPlaying = window.toggleBGM()

        // อัพเดตสถานะของปุ่ม
        updateButtonState(!isPlaying)
      })

      // เพิ่ม listener เพื่อติดตามการเปลี่ยนแปลงสถานะจากที่อื่น
      bgmGlobal.addEventListener('play', function () {
        updateButtonState(bgmGlobal.muted)
      })

      bgmGlobal.addEventListener('pause', function () {
        updateButtonState(true)
      })

      // ตรวจสอบและอัพเดตสถานะทุก 1 วินาที (เผื่อมีการควบคุมจากที่อื่น)
      setInterval(function () {
        updateButtonState(bgmGlobal.muted || bgmGlobal.paused)
      }, 1000)
    }
  })
</script>

<style>
  /* ทำให้ปุ่มเด่นชัดยิ่งขึ้น */
  .audio-control {
    position: fixed;
    bottom: 25px;
    right: 25px;
    z-index: 9999; /* ทำให้อยู่ด้านบนสุดเสมอ */
  }

  .audio-btn {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: var(--primary-color);
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    border: 2px solid var(--secondary-color);
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(123, 92, 67, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(123, 92, 67, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(123, 92, 67, 0);
    }
  }

  .audio-btn:hover {
    transform: scale(1.1);
    background-color: var(--accent-color);
  }

  .audio-btn svg {
    width: 24px;
    height: 24px;
  }

  .audio-off {
    display: none;
  }

  .audio-btn.muted .audio-on {
    display: none;
  }

  .audio-btn.muted .audio-off {
    display: block;
  }
</style>
