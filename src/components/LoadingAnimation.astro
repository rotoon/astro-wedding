<div class='loading-screen'>
  <div class='loading-container'>
    <div class='loading-logo'>SOM & TOON</div>
    <div class='loading-bar-container'>
      <div class='loading-bar'></div>
    </div>
    <div class='loading-text'>LOADING YOUR INVITATION</div>
    <div
      class='loading-progress'
      id='loading-progress'
    >
      <span
        class='loading-percent'
        id='loading-percent'
        >0%</span
      >
    </div>
  </div>
</div>

<style>
  .loading-progress {
    margin-top: 0.5rem;
    font-family: var(--body-font);
    font-size: 0.7rem;
    color: var(--text-muted);
    letter-spacing: 0.1em;
    display: block;
  }
</style>

<script is:inline>
  // Improved loading animation handler
  document.addEventListener('DOMContentLoaded', function () {
    // Set up elements
    const progressElement = document.getElementById('loading-progress')
    const percentElement = document.getElementById('loading-percent')
    const loadingScreen = document.querySelector('.loading-screen')
    const mainContainer = document.querySelector('.main-container')

    // Start with consistent progress updates
    let progress = 0
    let progressComplete = false

    // Use more reliable animation frames for smoother progress
    function updateProgress() {
      if (progressComplete) return

      // Smoother progress increment
      if (progress < 95) {
        progress += 1 + Math.random() * 2
        progress = Math.min(progress, 95)

        if (percentElement) {
          percentElement.textContent = Math.round(progress) + '%'
        }

        // Continue updates using requestAnimationFrame for smoother animation
        requestAnimationFrame(() => {
          setTimeout(updateProgress, 120)
        })
      }
    }

    // Start progress animation
    updateProgress()

    // Function to hide loading screen and show content
    function hideLoadingScreen() {
      progressComplete = true

      if (percentElement) {
        percentElement.textContent = '100%'
      }

      // Ensure the loading screen has the hidden class
      if (loadingScreen && !loadingScreen.classList.contains('hidden')) {
        console.log('Hiding loading screen after completion')
        loadingScreen.classList.add('hidden')
      }

      // Add a fallback timer to ensure main container becomes visible
      setTimeout(function () {
        if (mainContainer && !mainContainer.classList.contains('visible')) {
          console.log('Making main container visible')
          mainContainer.classList.add('visible')
        }
      }, 800)
    }

    // Force hide loading screen after max wait time (failsafe)
    setTimeout(function () {
      if (loadingScreen && !loadingScreen.classList.contains('hidden')) {
        console.log('Force hiding loading screen after timeout')
        hideLoadingScreen()
      }
    }, 8000)

    // Process proper load event with a slightly longer delay for smoother transition
    window.addEventListener('load', function () {
      setTimeout(function () {
        console.log('Window loaded, hiding loading screen')
        hideLoadingScreen()
      }, 2000) // Increased from 1000 to 2000ms for smoother transition
    })

    // Extra failsafe to ensure everything is visible if stuck in loading
    setTimeout(function () {
      if (mainContainer && !mainContainer.classList.contains('visible')) {
        console.log('Final failsafe - forcing main container visible')
        document.body.classList.add('loaded')
        loadingScreen.classList.add('hidden')
        mainContainer.classList.add('visible')
      }
    }, 10000)
  })
</script>
